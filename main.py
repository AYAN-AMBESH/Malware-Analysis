import hashlib
from os import walk,path
import argparse
import yara

MalwareInfo = list(open("full_sha256.txt","r").read().split("\n"))
MalList  = []
def yara_scanner(Directory,yara_rules_path):
    rules=yara.compile(filepath=yara_rules_path)
    for root, directories, files in walk(Directory, followlinks=False):
        for filename in files:
            filePath = path.join(root, filename)
            print("scanning " , filePath)
            matches = rules.match(filePath,fast=True,)
            print(matches)

def ConvertToHash(dir):
    with open(dir,"rb") as file:
        temp = file.read()
        hash = hashlib.sha256(temp).hexdigest()
        file.close()
    return hash

def MalwareCheck(dir):  
    print("scaning ",dir)
    hash = ConvertToHash(dir)
    # print("hash : ",hash)
    for i in MalwareInfo:
        if i == hash:
            # flag = -1
            MalList.append(dir)
            # print(flag)
            return 0
    return 0
#main
parser=argparse.ArgumentParser()
parser.add_argument("-d","--Dir",help="Directory path to be scanned")
parser.add_argument("-r","--rules",help="path of rules of yara")
parser.add_argument("-H","--hashscan",help="Scanning directory via hashes",action="store_true")
parser.add_argument("-s","--Scan",help="Directory scanned by Yara",action="store_true")
args=parser.parse_args() 

Directory = str(args.Dir)
if args.hashscan:
    for root, dirs, files in os.walk(Directory, topdown=True):
        for name in files:
            MalwareCheck(os.path.join(root, name))

    print("Malacious software found",MalList)

if args.Scan:
    yara_scanner(args.Dir,args.rules)

